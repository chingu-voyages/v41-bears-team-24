// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MenuCategory {
  id   Int    @id @default(autoincrement())
  name String

  menuItems MenuItem[]
}

model MenuItem {
  id           Int     @id @default(autoincrement())
  name         String
  price        Decimal
  ingredients  String
  description  String
  calorieCount Int
  imageUrl     String

  categoryId Int
  category   MenuCategory @relation(fields: [categoryId], references: [id])
  OrderItem  OrderItem[]
}

model OrderItem {
  id            Int    @id @default(autoincrement())
  quantity      Int
  modifications String

  menuItemId Int
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])

  orderId Int
  order   Order @relation(fields: [orderId], references: [id])
}

enum OrderStatus {
  UPNEXT
  COMPLETED
}

model Order {
  id           Int         @id @default(autoincrement())
  customerName String
  status       OrderStatus

  userId    Int
  user      User        @relation(fields: [userId], references: [id])
  createdAt DateTime    @default(now())
  OrderItem OrderItem[]
}

enum Role {
  ADMIN
  MANAGER
  EMPLOYEE
}

model User {
  id        Int    @id @default(autoincrement())
  username String @unique
  firstName String
  lastName  String
  password  String
  role      Role

  createdAt DateTime @default(now())
  Order     Order[]
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   posts   Post[]
//   profile Profile?
// }
